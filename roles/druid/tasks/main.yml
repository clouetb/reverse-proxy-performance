---
- name: Druid | Check if archive exists
  stat:
    path: "{{ home }}/{{ archive_filename }}"
  register: druid_archive_exists
- name: Druid | Download binary distribution
  get_url:
    url: "https://downloads.apache.org/druid/{{ druid_version }}/{{ archive_filename }}"
    dest: "{{ home }}"
  when: druid_archive_exists.stat.exists == false
- name: Druid | Check if dir exists
  stat:
    path: "{{ druid_dir }}"
  register: druid_dir_exists
- name: Druid | Extract archive
  unarchive:
    src: "{{ home }}/{{ archive_filename }}"
    dest: "{{ home }}"
    remote_src: yes
  when: druid_dir_exists.stat.exists == false
- name: Druid | Download contribs
  ansible.builtin.shell: >
    java -classpath "{{ druid_dir }}/lib/*"
    -Ddruid.extensions.hadoopDependenciesDir={{ druid_dir }}/hadoop-dependencies
    -Ddruid.extensions.directory={{ druid_dir }}/extensions
    org.apache.druid.cli.Main tools pull-deps --no-default-hadoop
    -l {{ druid_dir }}/extensions -c org.apache.druid.extensions.contrib:druid-momentsketch
  when: druid_dir_exists.stat.exists == false
- name: Java | Enable extended statistics aggregation functions
  lineinfile:
    path: "{{ druid_dir }}/conf/druid/single-server/small/_common/common.runtime.properties"
    regexp: "^druid.extensions.loadList=\\[(((?!druid-momentsketch).)*)\\]$"
    line: druid.extensions.loadList=[\1, "druid-momentsketch"]
    backrefs: yes
- name: Druid | Create Druid unit file
  template: src=druid.service.j2 dest=/lib/systemd/system/druid.service mode=644
  become: yes
  notify:
    - Restart Druid
- name: Druid | Flush handlers
  meta: flush_handlers
- name: Druid | Check if injection spec has already been setup
  stat:
    path: "{{ home }}/ingestion-spec.json"
  register: ingestion_spec_exists
- name: Druid | Copy ingestion spec
  template: src=ingestion-spec.json.j2 dest="{{ home }}/ingestion-spec.json" mode=644
- name: Druid | Pause for 20 seconds before submitting injection spec
  pause:
    seconds: 20
  when: ingestion_spec_exists.stat.exists == false
- name: Druid | Post ingestion spec
  uri:
    url: "http://{{ references['druid_vm'].fqdn }}:8081/druid/indexer/v1/supervisor"
    method: POST
    src: "{{ home }}/ingestion-spec.json"
    status_code: 200
    body_format: json
    remote_src: yes
  when: ingestion_spec_exists.stat.exists == false